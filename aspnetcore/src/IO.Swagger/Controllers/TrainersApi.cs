/*
 * Pedellus API
 *
 * A NetAcademia szolgáltatásainak API-ja
 *
 * OpenAPI spec version: 0.1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Swashbuckle.SwaggerGen.Annotations;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class TrainersApiController : Controller
    { 

        /// <summary>
        /// az adott tanfolyam adatai
        /// </summary>
        /// <remarks>az időzítési és automatizálási információk lekérdezése elsősorban</remarks>
        /// <param name="courseId">a lekérdezni kívánt tanfolyam azonosítója</param>
        /// <response code="200">a tanfolyam létezik, adatai visszaadva</response>
        /// <response code="400">rossz paraméter</response>
        /// <response code="404">nincs ilyen tanfolyam</response>
        [HttpGet]
        [Route("/netacademia/Pedellus/0.1.0/course/{courseId}")]
        [SwaggerOperation("GetCourseById")]
        public virtual void GetCourseById([FromRoute]Guid? courseId)
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// az adott felvétel aktuális paramétereinek szolgáltatása
        /// </summary>
        
        /// <param name="recordingId">a lekérdezni kívánt felvétel azonosítója</param>
        /// <response code="200">a felvétel létezik, adatai visszaadva</response>
        /// <response code="400">rossz paraméter</response>
        /// <response code="401">Bejelentkezés szükséges</response>
        /// <response code="404">nincs ilyen felvétel</response>
        [HttpGet]
        [Route("/netacademia/Pedellus/0.1.0/recording/{recordingId}")]
        [SwaggerOperation("GetRecordingById")]
        [SwaggerResponse(200, type: typeof(Recording))]
        public virtual IActionResult GetRecordingById([FromRoute]Guid? recordingId)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Recording>(exampleJson)
            : default(Recording);
            return new ObjectResult(example);
        }


        /// <summary>
        /// felvétel mentése felhasználásra
        /// </summary>
        
        /// <param name="recordingId">a lezárni kívánt felvétel azonosítója</param>
        /// <param name="details"></param>
        /// <response code="200">a felvétel lezárva</response>
        /// <response code="400">rossz paraméter</response>
        /// <response code="401">Bejelentkezés szükséges</response>
        /// <response code="404">nincs ilyen felvétel</response>
        /// <response code="409">Nem lehet lezárni</response>
        [HttpPut]
        [Route("/netacademia/Pedellus/0.1.0/recording/{recordingId}/save")]
        [SwaggerOperation("SaveRecordingById")]
        public virtual void SaveRecordingById([FromRoute]Guid? recordingId, [FromBody]RecordingDetails details)
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// felvétel indítása
        /// </summary>
        
        /// <param name="recordingId">az elindítani kívánt felvétel azonosítója</param>
        /// <response code="200">a felvétel elindult</response>
        /// <response code="400">rossz paraméter</response>
        /// <response code="401">Bejelentkezés szükséges</response>
        /// <response code="404">nincs ilyen felvétel</response>
        /// <response code="409">Nem lehet elindítani</response>
        [HttpPut]
        [Route("/netacademia/Pedellus/0.1.0/recording/{recordingId}/start")]
        [SwaggerOperation("StartRecordingById")]
        public virtual void StartRecordingById([FromRoute]Guid? recordingId)
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// felvétel leállítása
        /// </summary>
        
        /// <param name="recordingId">a leállítani kívánt felvétel azonosítója</param>
        /// <response code="200">a felvétel megállt</response>
        /// <response code="400">rossz paraméter</response>
        /// <response code="401">Bejelentkezés szükséges</response>
        /// <response code="404">nincs ilyen felvétel</response>
        /// <response code="409">Nem lehet leállítani</response>
        [HttpPut]
        [Route("/netacademia/Pedellus/0.1.0/recording/{recordingId}/stop")]
        [SwaggerOperation("StopRecordingById")]
        public virtual void StopRecordingById([FromRoute]Guid? recordingId)
        { 
            throw new NotImplementedException();
        }
    }
}
